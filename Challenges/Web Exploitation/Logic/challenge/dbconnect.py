import pyodbc
import time
import random
import hashlib
import base64

# --- Hardcoded connection details (will be visible in strings) ---
hardcoded_creds = '''
server = '127.0.0.1'
database = 'logicdb'
username = 'sa'
password = 'L0G1C_2025*@++'
'''

# --- Prompt user for connection details ---
def get_connection_params():
    print("[*] Please provide the following connection parameters:")
    server = input("Server: ")
    database = input("Database: ")
    username = input("Username: ")
    password = input("Password: ")
    
    connection_string = f'DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={server};DATABASE={database};UID={username};PWD={password}'
    return connection_string

# --- Fake computational fluff to increase size ---
def junk_math_operations():
    total = 0
    for i in range(1, 100000):
        total += (i * random.randint(1, 10)) % 1234567
    return total

def fake_hashing_routine():
    for i in range(10000):
        data = f'junk_data_{i}'.encode()
        hashlib.sha256(data).hexdigest()
        hashlib.md5(data).hexdigest()
        base64.b64encode(data)

def filler_classes():
    class Dummy:
        def __init__(self, x):
            self.x = x
        def compute(self):
            return self.x ** 2
    d = Dummy(123)
    for _ in range(10000):
        d.compute()

# --- Connect to MSSQL ---
def connect_to_db(connection_string):
    try:
        conn = pyodbc.connect(connection_string)
        cursor = conn.cursor()
        print('[+] Connected to the database.')
        
        # Query example
        cursor.execute('SELECT name FROM sys.databases')
        rows = cursor.fetchall()
        for row in rows:
            print('[*] Found DB:', row.name)

        conn.close()
    except Exception as e:
        print('[-] Connection failed:', str(e))

# --- Main execution ---
def main():
    print('[*] Starting connection logic...')
    
    # Prompt the user for connection parameters
    connection_string = get_connection_params()
    
    # Perform additional filler functions to increase size
    junk_math_operations()
    fake_hashing_routine()
    filler_classes()
    
    # Try connecting to the provided MSSQL database
    connect_to_db(connection_string)
    
    print('[*] Done.')

if __name__ == '__main__':
    main()
